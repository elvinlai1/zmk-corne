/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define raise 1
#define lower 2
#define bluetooth 3
#define numpad 4

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        behaviors {
           td_boot: tap_dance_bootloader {
                compatible = "zmk,behavior-tap-dance";
                label = "TAP_DANCE_BOOTLOADER";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp N1>, <&kp N2>, <&bootloader>;
           };
 
        };

        keymap {
                compatible = "zmk,keymap";


                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | SHIFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | DEL |
//                    | RSE | LALT | SPC |   | ENT |  NUMPAD | LWR  |
// -----------------------------------------------------------------------------------------

                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T     &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHIFT &kp A &kp S &kp D &kp F &kp G     &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B     &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp DEL
                 &mo 1 &kp LALT  &kp SPACE     &kp RET &mo 4 &mo 2
                        >;
                };

                raise_layer {
                        bindings = <
   &kp TAB     &kp N1   &kp N2   &kp N3   &kp N4   &kp N5            &kp N6   &kp N7      &kp N8       &kp N9      &kp N0     &kp BSPC
   &kp LSHIFT  &none    &none    &none    &none    &kp PG_UP         &none    &kp LBKT    &kp MINUS    &kp EQUAL   &kp RBKT   &kp BSLH
   &kp LCTRL   &none    &none    &none    &none    &kp PG_DN         &none    &none       &none        &none       &none      &kp LSHIFT
                                 &kp LGUI  &trans  &trans            &trans  &trans  &trans
                        >;
                };

                lower_layer {
                        bindings = <
   &kp GRAVE    &none    &none    &none    &none      &none           &none    &none     &none    &none      &none      &none 
   &kp LSHIFT   &none    &none    &none    &none      &none           &none    &kp LEFT  &kp UP   &kp DOWN   &kp RIGHT  &none
   &none        &none    &none    &none    &none      &none           &none    &none     &none    &none      &none      &none
                                  &td_boot &trans     &none           &none   &trans   &td_boot
                        >;
                };

                bluetooth_layer {
                        bindings = <
    &none     &kp F1   &kp F2  &kp F3   &kp F4   &kp F5            &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &none 
    &none     &none    &none   &none    &none    &none             &none    &none    &none    &none    &none    &none
    &none     &none    &none   &none    &none    &none             &none    &none    &none    &none    &none    &bt BT_CLR  
                        &sys_reset    &trans     &none             &none    &trans   &sys_reset 
                        >;
                };

                    numpad_layer {
                        bindings = <
    &none     &none    &none   &none    &none    &none             &none    &none    &none    &none    &none    &none
    &none     &none    &none   &none    &none    &none             &none    &none    &none    &none    &none    &none
    &none     &none    &none   &none    &none    &none             &none    &none    &none    &none    &none    &none
                             &none     &none     &none             &trans     &none     &none
                        >;
                };
        };
};

